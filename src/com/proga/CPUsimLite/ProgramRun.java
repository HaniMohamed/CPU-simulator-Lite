/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.proga.CPUsimLite;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author hani
 */
public class ProgramRun extends javax.swing.JFrame {

    List<String> code = new ArrayList<>();

    CPURegisters cpu = new CPURegisters();
    MainMemory ram = new MainMemory();
    GPRegisters reg = new GPRegisters();
    int i = 0;

    DefaultListModel listModel = new DefaultListModel();

    /**
     * Creates new form Run
     */
    public ProgramRun() {
        initComponents();
    }

    public ProgramRun(List<String> code) {
        this.code = code;
        initComponents();

        next.setVisible(false);
        fetch.setVisible(false);
        execute.setVisible(false);

        setTitle("Running Program");
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);

        cpu.setTitle("CPU Registers");
        cpu.setResizable(false);
        cpu.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        cpu.setLocationByPlatform(true);
        cpu.setLocation(910, 100);
        cpu.setVisible(true);

        reg.setTitle("General Purpose Registers");
        reg.setResizable(false);
        reg.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        reg.setLocationByPlatform(true);
        reg.setLocation(50, 450);
        reg.setVisible(true);

        ram.setTitle("Main Memory");
        ram.setResizable(false);
        ram.setLocationByPlatform(true);
        ram.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ram.setVisible(true);
        ram.setLocation(50, 100);
        ram.insertCode(code);

        start.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        next = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        start = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fetch = new javax.swing.JButton();
        execute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setAutoscrolls(true);

        jList1.setBackground(java.awt.SystemColor.window);
        jScrollPane1.setViewportView(jList1);

        next.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        next.setText(">");
        next.setEnabled(false);
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        start.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        start.setText("start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Running The Program");

        fetch.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        fetch.setText("fetch");
        fetch.setEnabled(false);
        fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchActionPerformed(evt);
            }
        });

        execute.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        execute.setText("Execute");
        execute.setEnabled(false);
        execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(fetch, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(execute, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fetch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(execute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:

        listModel.addElement(code.get((int) Long.parseLong(cpu.getPC(), 16)));
        jList1.setModel(listModel);
        jList1.ensureIndexIsVisible(jList1.getModel().getSize() - 1);

        fetch.setEnabled(true);
        fetch.requestFocus();
        next.setEnabled(false);


    }//GEN-LAST:event_nextActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        //fetch();
        listModel.addElement(code.get((int) Long.parseLong(cpu.getPC(), 16)));
        jList1.setModel(listModel);
        jList1.ensureIndexIsVisible(jList1.getModel().getSize() - 1);

        start.setEnabled(false);
        next.setVisible(true);
        fetch.setVisible(true);
        execute.setVisible(true);
        fetch.setEnabled(true);
        fetch.requestFocus();

    }//GEN-LAST:event_startActionPerformed

    private void fetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchActionPerformed
        // TODO add your handling code here:
        fetch();

        fetch.setEnabled(false);
        execute.setEnabled(true);
        execute.requestFocus();
    }//GEN-LAST:event_fetchActionPerformed

    private void executeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeActionPerformed
        // TODO add your handling code here:
        next.setEnabled(true);
        next.requestFocus();
        execute.setEnabled(false);

        execute();

    }//GEN-LAST:event_executeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgramRun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgramRun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgramRun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgramRun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgramRun().setVisible(true);
            }
        });
    }

    public void fetch() {
        cpu.setMAR(cpu.getPC());
        cpu.setMBR(ram.getContent((int) Long.parseLong(cpu.getPC(), 16)));
        cpu.setIR(ram.getContent((int) Long.parseLong(cpu.getPC(), 16)).substring(0, 2));
        cpu.setPC(Integer.toHexString((int) Long.parseLong(cpu.getPC(), 16) + 1));
    }

    public void execute() {
        String inst = null, command = null, oper1 = null, oper2 = null;
        int oper1Value = 0, oper2Value = 0;

        inst = cpu.getMBR().replace("75", "ADD").replace("57", "SUB").replace("62", "DEC")
                .replace("56", "INC").replace("45", "MOV").replace("68", "END")
                .replace("23", "INP").replace("48", "OUT").replace("82", "BNZ").replace("91", "SKZ")
                .replace("0100", "R1").replace("0101", "R2").replace("0110", "R3").replace("0111", "R4");

        command = inst.substring(0, 3);

        //Get 1st operand value
        if (inst.length() > 3) {
            oper1 = inst.substring(3, 5);
            oper1Value = (int) Long.parseLong(reg.getReg(oper1), 16);
        }

        //Get 2nd operand value
        if (inst.length() > 5) {
            oper2 = inst.substring(5, inst.length());
            if (oper2.contains("R")) {
                oper2Value = (int) Long.parseLong(reg.getReg(oper2), 16);
            } else {
                oper2Value = (int) Long.parseLong(oper2, 16);
            }
        }

        if (command.equals("ADD")) {
            cpu.setAC(Integer.toHexString(oper1Value + oper2Value));
            reg.setReg(oper1, cpu.getAC());
        } else if (command.equals("SUB")) {
            cpu.setAC(Integer.toHexString(oper1Value - oper2Value));
            reg.setReg(oper1, cpu.getAC());
        } else if (command.equals("INC")) {
            cpu.setAC(Integer.toHexString(oper1Value + 1));
            reg.setReg(oper1, cpu.getAC());
        } else if (command.equals("DEC")) {
            cpu.setAC(Integer.toHexString(oper1Value - 1));
            reg.setReg(oper1, cpu.getAC());
        } else if (command.equals("MOV")) {
            cpu.setAC(Integer.toHexString(oper2Value));
            reg.setReg(oper1, cpu.getAC());
        } else if (command.equals("INP")) {
            cpu.setAC(Integer.toHexString(Integer.parseInt(showInputDialog())));
            reg.setReg(oper1, cpu.getAC());
        } else if (command.equals("OUT")) {
            cpu.setAC(Integer.toHexString(oper1Value));
            JOptionPane.showMessageDialog(null, "Output(int): " + Long.parseLong(cpu.getAC(), 16));
        } else if (command.equals("BNZ")) {
            if (!(oper1Value == 0)) {
                cpu.setPC(Integer.toHexString(oper2Value));
            }
        } else if (command.equals("SKZ")) {
            if (oper1Value == 0) {
                cpu.setPC(Integer.toHexString((int) Long.parseLong(cpu.getPC(), 16)+1));
            }
        }else if (command.equals("END")) {
            next.setEnabled(false);
            exit.requestFocus();
        }

    }

    private String showInputDialog() {
        String inputValue = JOptionPane.showInputDialog("Please input (int) number");

        if (inputValue == null || inputValue.isEmpty() || !inputValue.matches("[0-9]*")) {
            inputValue = showInputDialog();
        }

        return inputValue;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton execute;
    private javax.swing.JButton exit;
    private javax.swing.JButton fetch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton next;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables
}
