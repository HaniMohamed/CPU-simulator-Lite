/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.proga.CPUsimLite;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author hani
 */
public class MainGUI extends javax.swing.JFrame {
    
    List<String> finalCode = new ArrayList<>();
    String[] availRegisters = {"R1", "R2", "R3", "R4"};
    String code;
    
    static MainGUI m = new MainGUI();

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnDone = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 28)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CPU Simulator");

        jLabel2.setText("Enter Simulation Code :");

        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(175, 22, 24));
        jLabel3.setText("   ");

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(4, 124, 2));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Available Instructions");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("ADD R1, R2;\t; add 2nd operand value to 1st operand value.\nSUB R1, R2;\t; subtract 2nd operand value from 1st operand value.\nMOV R3, R4;\t; transfer value of 2nd operand  to the 1st operand\nINC R1;\t; increment Register value by 1.\nDEC R2;\t; decrement Register value by 1.\nEND;\t; end program.");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel5.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(4, 124, 2));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Available Registers");

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setText("Four Registers:\n\tR1, R2, R3, R4");
        jScrollPane4.setViewportView(jTextArea4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClose))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDone)
                    .addComponent(btnClose))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        if (checkCode()) {
            String[] codeLines = code.split("\n");
            for (int i = 0; i < jTextArea1.getLineCount(); i++) {
                finalCode.add(codeLines[i].substring(0,(codeLines[i].indexOf(";")+1)));
            }
            
            m.setVisible(false);
            
            ProgramRun run = new ProgramRun(finalCode);
           
            
        }
    }//GEN-LAST:event_btnDoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                m.setVisible(true);
                m.setResizable(false);
                m.setLocationRelativeTo(null);
                
            }
        });
    }
    
    public boolean checkCode() {
        boolean valid = false;
        code = jTextArea1.getText();
        String[] codeLines = code.split("\n");
        for(int i=0; i<codeLines.length;i++){
            codeLines[i]=codeLines[i].substring(0,(codeLines[i].indexOf(";")+1));
        }
        
        if (code.equals("")) {
            jLabel3.setText("Error: No code entered !");
            
        } else {
            for (int i = 0; i < jTextArea1.getLineCount(); i++) {
                if (!codeLines[i].substring(codeLines[i].length() - 1).equals(";")) {
                    showError(i);
                    valid = false;
                    break;
                }
                String[] words = codeLines[i].replaceAll("[;,]", "").split("\\s+");
                
                if (words[0].equals("ADD")) {
                    //two operands
                    if (words.length == 3) {
                        valid = false;
                        boolean operand1 = false;
                        boolean operand2 = false;
                        //1st operand must be Register
                        for (int j = 0; j < availRegisters.length; j++) {
                            if (words[1].equals(availRegisters[j])) {
                                operand1 = true;
                            }
                        }

                        //check 2nd operand
                        if (words[2].contains("R")) {
                            for (int j = 0; j < availRegisters.length; j++) {
                                if (words[2].equals(availRegisters[j])) {
                                    operand2 = true;
                                }
                            }
                        } else {
                            operand2 = true;
                        }
                        
                        if (operand1 && operand2) {
                            valid = true;
                        }
                        
                    } else {
                        valid = false;
                    }
                    
                } else if (words[0].equals("SUB")) {
                    //two operands
                    if (words.length == 3) {
                        valid = false;
                        boolean operand1 = false;
                        boolean operand2 = false;
                        //1st operand must be Register
                        for (int j = 0; j < availRegisters.length; j++) {
                            if (words[1].equals(availRegisters[j])) {
                                operand1 = true;
                            }
                        }

                        //check 2nd operand
                        if (words[2].contains("R")) {
                            for (int j = 0; j < availRegisters.length; j++) {
                                if (words[2].equals(availRegisters[j])) {
                                    operand2 = true;
                                }
                            }
                        } else {
                            operand2 = true;
                        }
                        
                        if (operand1 && operand2) {
                            valid = true;
                        }
                    } else {
                        valid = false;
                    }
                    
                }else if (words[0].equals("MOV")) {
                    //two operands
                    if (words.length == 3) {
                        valid = false;
                        boolean operand1 = false;
                        boolean operand2 = false;
                        //1st operand must be Register
                        for (int j = 0; j < availRegisters.length; j++) {
                            if (words[1].equals(availRegisters[j])) {
                                operand1 = true;
                            }
                        }

                        //check 2nd operand
                        if (words[2].contains("R")) {
                            for (int j = 0; j < availRegisters.length; j++) {
                                if (words[2].equals(availRegisters[j])) {
                                    operand2 = true;
                                }
                            }
                        } else {
                            operand2 = true;
                        }
                        
                        if (operand1 && operand2) {
                            valid = true;
                        }
                    } else {
                        valid = false;
                    }
                    
                } else if (words[0].equals("INC")) {
                    //one operand
                    if (words.length == 2) {
                        valid = false;

                        //operand must be Register
                        for (int j = 0; j < availRegisters.length; j++) {
                            if (words[1].equals(availRegisters[j])) {
                                valid = true;
                            }
                            
                        }
                        
                    } else {
                        valid = false;
                    }
                    
                } else if (words[0].equals("DEC")) {
                    //one operand
                    if (words.length == 2) {
                        valid = false;

                        //operand must be Register
                        for (int j = 0; j < availRegisters.length; j++) {
                            if (words[1].equals(availRegisters[j])) {
                                valid = true;
                            }
                            
                        }
                        
                    } else {
                        valid = false;
                    }
                    
                } else if (words[0].equals("END")) {
                    //zero operand
                    if (words.length == 1) {
                        valid = true;
                        
                    } else {
                        valid = false;
                    }
                    
                } else {
                    valid = false;
                }
                if (!valid) {
                    showError(i);
                    break;
                }
            }
        }
        if (!codeLines[codeLines.length - 1].replaceAll("[;,]", "").equals("END")) {
            valid = false;
            jLabel3.setText("Program must end with the 'END' Instruction");
        }
        return valid;
    }
    
    public void showError(int i) {
        jLabel3.setText("Error: in line" + (i + 1));
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea4;
    // End of variables declaration//GEN-END:variables
}
